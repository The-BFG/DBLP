Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> query
Rule 1     query -> expression
Rule 2     query -> query expression
Rule 3     expression -> FIELD COLON value
Rule 4     expression -> value
Rule 5     value -> KEYWORD
Rule 6     value -> " PHRASE "

Terminals, with rules where they appear

"                    : 6 6
COLON                : 3
FIELD                : 3
KEYWORD              : 5
PHRASE               : 6
error                : 

Nonterminals, with rules where they appear

expression           : 1 2
query                : 2 0
value                : 3 4

Parsing method: LALR

state 0

    (0) S' -> . query
    (1) query -> . expression
    (2) query -> . query expression
    (3) expression -> . FIELD COLON value
    (4) expression -> . value
    (5) value -> . KEYWORD
    (6) value -> . " PHRASE "

    FIELD           shift and go to state 3
    KEYWORD         shift and go to state 5
    "               shift and go to state 6

    query                          shift and go to state 1
    expression                     shift and go to state 2
    value                          shift and go to state 4

state 1

    (0) S' -> query .
    (2) query -> query . expression
    (3) expression -> . FIELD COLON value
    (4) expression -> . value
    (5) value -> . KEYWORD
    (6) value -> . " PHRASE "

    FIELD           shift and go to state 3
    KEYWORD         shift and go to state 5
    "               shift and go to state 6

    expression                     shift and go to state 7
    value                          shift and go to state 4

state 2

    (1) query -> expression .

    FIELD           reduce using rule 1 (query -> expression .)
    KEYWORD         reduce using rule 1 (query -> expression .)
    "               reduce using rule 1 (query -> expression .)
    $end            reduce using rule 1 (query -> expression .)


state 3

    (3) expression -> FIELD . COLON value

    COLON           shift and go to state 8


state 4

    (4) expression -> value .

    FIELD           reduce using rule 4 (expression -> value .)
    KEYWORD         reduce using rule 4 (expression -> value .)
    "               reduce using rule 4 (expression -> value .)
    $end            reduce using rule 4 (expression -> value .)


state 5

    (5) value -> KEYWORD .

    FIELD           reduce using rule 5 (value -> KEYWORD .)
    KEYWORD         reduce using rule 5 (value -> KEYWORD .)
    "               reduce using rule 5 (value -> KEYWORD .)
    $end            reduce using rule 5 (value -> KEYWORD .)


state 6

    (6) value -> " . PHRASE "

    PHRASE          shift and go to state 9


state 7

    (2) query -> query expression .

    FIELD           reduce using rule 2 (query -> query expression .)
    KEYWORD         reduce using rule 2 (query -> query expression .)
    "               reduce using rule 2 (query -> query expression .)
    $end            reduce using rule 2 (query -> query expression .)


state 8

    (3) expression -> FIELD COLON . value
    (5) value -> . KEYWORD
    (6) value -> . " PHRASE "

    KEYWORD         shift and go to state 5
    "               shift and go to state 6

    value                          shift and go to state 10

state 9

    (6) value -> " PHRASE . "

    "               shift and go to state 11


state 10

    (3) expression -> FIELD COLON value .

    FIELD           reduce using rule 3 (expression -> FIELD COLON value .)
    KEYWORD         reduce using rule 3 (expression -> FIELD COLON value .)
    "               reduce using rule 3 (expression -> FIELD COLON value .)
    $end            reduce using rule 3 (expression -> FIELD COLON value .)


state 11

    (6) value -> " PHRASE " .

    FIELD           reduce using rule 6 (value -> " PHRASE " .)
    KEYWORD         reduce using rule 6 (value -> " PHRASE " .)
    "               reduce using rule 6 (value -> " PHRASE " .)
    $end            reduce using rule 6 (value -> " PHRASE " .)

